//------------------------------------------------
//--- 010 Editor v11.0.1 Binary Template
//
//      File: level.bt
//   Authors: TheIndra
// File Mask: *.gnc
//------------------------------------------------

struct cdcVector
{
    float x;
    float y;
    float z;
    float w;
};

// same as relocations.bt

struct SectionInfo
{
    uint32 magic;
    int32 size;
    byte type;
    byte pad;
    uint16 versionID;
    struct {
        uint32 hasDebugInfo : 1;
        uint32 resourceType : 7;
        uint32 numRelocations : 24;        
    } packedData;
    uint32 id;
    uint32 specMask;
} section <fgcolor=cGreen>;

struct Relocation
{
    struct {
        uint16 type : 3;
        uint16 sectionIndexOrType : 13;
    } typeAndSectionInfo;
    int16 typeSpecific;
    uint32 offset <fgcolor=cRed>;
} relocation[section.packedData.numRelocations] <fgcolor=cRed>;

// save the position since the section data starts here and this is the base for every offset
local int levelStart = FTell();

// taken from TR7.pdb
struct Level {
  uint32 terrain;
  float waterZLevel;
  char backColorR;
  char backColorG;
  char backColorB;
  char cpad1;
  char spectralColorR;
  char spectralColorG;
  char spectralColorB;
  char spectralFXAlways;
  char waterColorR;
  char waterColorG;
  char waterColorB;
  char waterBlend;
  float farPlane;
  float fogFar;
  float fogNear;
  float spectralFarPlane;
  float spectralFogFar;
  float spectralFogNear;
  float waterFarPlane;
  float waterFogFar;
  float waterFogNear;
  int UnderwaterFXAlpha;
  float UnderwaterFXMovement;
  float UnderwaterFXSpeed;
  int SpectralFXAlpha;
  float SpectralFXIncrease;
  float SpectralFXCenter;
  int WaterFXAlpha;
  float WaterFXMovement;
  float WaterFXSpeed;
  int WaterFSFX;
  int numMarkUps;
  uint32 markupList;
  int numCameras;
  uint32 cameraList;
  int flags;
  int numIntros;
  uint32 introList;
  uint32 objectNameList;
  uint32 worldName; 
  uint32 startGoingIntoWaterSignal;
  uint32 startGoingOutOfWaterSignal;
  int unitFlags;
  uint32 SignalListStart;
  uint32 SignalIDList;
  uint32 splineCameraData;
  uint32 relocModule;
  int NumberOfSFXMarkers;
  uint32 SFXMarkerList;
  unsigned int versionNumber; // 79824059
  unsigned int guiID;
  uint32 dynamicMusicName;
  int streamUnitID;
} level <fgcolor=cBlue>;

// skip to intro list
FSeek(levelStart + level.introList);

struct Intro
{
	cdcVector rotation;
	cdcVector position;
	cdcVector dummy1;
	cdcVector dummy2;
	cdcVector scale;
	uint16 objectID; // this is the id of the object, see default\trae\pc-w\objectlist.txt for all objects and their id
	uint16 intronum;
	uint32 UniqueID; // this is the unique intro id
	float maxRad;
	uint32 introFlags;
	uint32 attachedVMO;
	uint32 data;
	uint32 multiSpline;
	uint16 startFrame;
	uint16 endFrame;
} intros[level.numIntros] <fgcolor=cYellow>;

// skip to objectNameList
FSeek(levelStart + level.objectNameList);

while ( ReadShort( FTell() ) != 0 )
    uint16 objectNameList <fgcolor=0xffa500>;
