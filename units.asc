Units
-----

The game consists of units, these units are connected to eachother using portals and contain all objects.

Unit list
~~~~~~~~~~~

Units are retrieved from `TRAE\PC-W\objlist.dat` (not unitlist.txt) and then stored in memory

[source,cpp]
----
struct UnitList
{
	uint32_t NumUnits;
	UnitInfo[] Units;
};
struct UnitInfo
{
	char Name[16];
	uint32_t Unk1;
};
----

Stream list
~~~~~~~~~~~

The game can hold up to 8 units in memory, it will automatically remove unused units while loading a new one.

[source,cpp]
----
StreamUnit StreamList[8]

struct StreamUnit
{
	uint32_t UnitId;
	uint8_t Unk1;
	uint8_t Unk2;
	uint16_t Flags;
	uint32_t Unk3;
	char Name[20];
	// TODO
};
----

Scripts
~~~~~~~

Units contain scripts which control the level flow e.g. switches, doors, cinematics and other actions. These are PE files exporting these functions:

* EventMain
* CallTrigger
* IsTriggerActive
* EventRelocate

[source,cpp]
----
int EventMain(GameTracker* a1, StreamUnit* a2, int a3)
{
	(a3 + 1512)("02_CN_Hotel", 0); // StartBlockingCine
}
----

**a3** in this function is a pointer to a table where functions and variables are stored the script can call.

Example
^^^^^^^

++++
<iframe width="560" height="315" src="https://www.youtube.com/embed/-9BbhLukBac" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
++++

The above video doesn't use the orginal unit script but our hooked function
[source,cpp]
----
int HookedEventMain(int gametracker, int unit, int a3)
{
	auto instanceFind = 
		((int(__cdecl*)(int)) *(DWORD*)(a3 + 252));
	auto instanceQuery = 
		((int(__cdecl*)(int, int)) *(DWORD*)(a3 + 236));
	auto instancePost = 
		((void(__cdecl*)(DWORD, DWORD, int)) *(DWORD*)(a3 + 240));
	auto instanceKill = 
		((void(__cdecl*)(DWORD, int)) *(DWORD*)(a3 + 352));

	// get the lever and door from the unit
	auto lever = instanceFind(3367);
	auto door = instanceFind(3349);

	// query the lever until it returns 1
	if (lever && instanceQuery(lever, 233) == 1)
	{
		// post to the door to open
		instancePost(door, 8388753, 0);
	}
}
----